% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AnalysisResults-class.R
\docType{methods}
\name{visualization-methods-analyses}
\alias{visualization-methods-analyses}
\alias{plot,AnalysisResults,ANY-method}
\alias{plot.AnalysisResults}
\title{Visualization methods}
\usage{
\S4method{plot}{AnalysisResults,ANY}(x, y, ..., graph = NULL,
  add.label = TRUE, axes = c(1, 2), col.ind = NULL, xlim = c(0.5, 10),
  ylim = NULL)
}
\arguments{
\item{x}{an object of class \linkS4class{AnalysisResults}}

\item{y}{currently not used}

\item{...}{currently not used}

\item{graph}{a vector specifying the elements to be plotted. Allowed values
are \code{"eig"} for plot of eigen value (PCA), \code{"ind"} for plot of
individuals (PCA and OPLS-DA), \code{"var"} for plot of variables (PCA and
OPLS-DA), \code{"boxplot"} for boxplot of test results and \code{"buckets"}
to show significant or influential buckets on the mean spectrum.
Default value is NULL (\emph{i. e.} \code{c("ind", "var")} for PCA and
OPLS-DA and \code{c("boxplot")} for tests).}

\item{add.label}{if \code{TRUE}, labels are added on individual plot.}

\item{axes}{a numeric vector of length 2 specifying the dimensions to be
plotted on individual and variable plots.}

\item{col.ind}{an character specifying the name of the design variable used
for coloring the observations by groups for PCA individual plot.}

\item{xlim, ylim}{boundaries for x and y, respectively.}
}
\value{
\itemize{
\item PCA: a ggplot allows the visualization of PCA results (eigen values,
individuals and variables)
\item OPLS-DA: a ggplot allows the visualization of OPLS-DA results
(individuals and variables). If \code{cross.val > 1} in \code{\link{oplsda}},
only results on the first fold are plotted.
}
}
\description{
Method available to plot results of analyses in ASICS package.
}
\examples{
# Import quantification results
library(ASICSdata)
quantif_path <- system.file("extdata", "results_ASICS.txt",
                            package = "ASICSdata")
quantification <- read.table(quantif_path, header = TRUE, row.names = 1)

# Import design
design <- read.table(system.file("extdata", "design_diabete_example.txt",
                                 package = "ASICSdata"), header = TRUE)

# Create object for analysis and remove metabolites with more than 25\% of
#zeros
analysis_obj <- formatForAnalysis(quantification,
                                    zero.threshold = 25, design = design)

# Perform a PCA and plot results
res_pca <- pca(analysis_obj)
plot(res_pca)

# Perform an OPLS-DA and plot results
res_oplsda <- oplsda(analysis_obj, "condition", orthoI = 1)
plot(res_oplsda)

# Perform Kruskal-Wallis tests and plot results
res_tests <- kruskalWallis(analysis_obj, "condition")
plot(res_tests)
}
